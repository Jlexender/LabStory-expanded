@startuml
!pragma useIntermediatePackages false

class "Enum" as java.lang.Enum {
}
class "App" as ru.jlexender.se.labstory.App {
  + {static}void main(String[])
}
class "Book" as ru.jlexender.se.labstory.Book {
  #Human karlsson
  #Human baby
  #Human rulle
  #Human fille
  #Human frokenBock
  #Human uncleJulius
  #Porch porch
  #Place rulleHome
  #Place filleHome
  #Place babyHome
  #Glass glass
  #Juice juice
  #Buns buns
  __
  +void go()
}
interface "IDoNotListen" as ru.jlexender.se.labstory.actionInterfaces.IDoNotListen {
  + {abstract}void doNotListen(Human)
  + {abstract}void doNotListen()
}
interface "IDrinkFromItem" as ru.jlexender.se.labstory.actionInterfaces.IDrinkFromItem {
  + {abstract}void drinkFromItem(IDrinkingItem)
}
interface "IEat" as ru.jlexender.se.labstory.actionInterfaces.IEat {
  + {abstract}void eat(IFood)
}
interface "IForgetToTell" as ru.jlexender.se.labstory.actionInterfaces.IForgetToTell {
  + {abstract}void forgetToTell(Human)
}
interface "IGoingTo" as ru.jlexender.se.labstory.actionInterfaces.IGoingTo {
  + {abstract}void isGoingTo(Place)
}
interface "IHold" as ru.jlexender.se.labstory.actionInterfaces.IHold {
  + {abstract}void hold(Item)
}
interface "ILive" as ru.jlexender.se.labstory.actionInterfaces.ILive {
  + {abstract}void live(Place)
}
interface "IPour" as ru.jlexender.se.labstory.actionInterfaces.IPour {
  + {abstract}void pour(IDrinkingItem, Item)
}
interface "IRollItem" as ru.jlexender.se.labstory.actionInterfaces.IRollItem {
  + {abstract}void rollItem(Item)
}
interface "ISit" as ru.jlexender.se.labstory.actionInterfaces.ISit {
  + {abstract}void sit(Place)
  + {abstract}void sit()
}
interface "IStartThinking" as ru.jlexender.se.labstory.actionInterfaces.IStartThinking {
  + {abstract}void startThinking()
}
interface "IStopThinking" as ru.jlexender.se.labstory.actionInterfaces.IStopThinking {
  + {abstract}void stopThinking()
}
interface "ITell" as ru.jlexender.se.labstory.actionInterfaces.ITell {
  + {abstract}void tell(Human)
}
class "Human" as ru.jlexender.se.labstory.basicClasses.Human {
  -String name
  -Mood mood
  __
  +String getName()
  +Mood getMood()
  ~void setMood(Mood)
  +void doNotListen()
  +void doNotListen(Human)
  +void drinkFromItem(IDrinkingItem)
  +void eat(IFood)
  +void forgetToTell(Human)
  +void isGoingTo(Place)
  +void hold(Item)
  +void live(Place)
  +void pour(IDrinkingItem, Item)
  +void rollItem(Item)
  +void sit()
  +void sit(Place)
  +void startThinking()
  +void stopThinking()
  +void tell(Human)
  +boolean equals(Object)
  +String toString()
  +int hashCode()
}
abstract class "Item" as ru.jlexender.se.labstory.basicClasses.Item {
  -String name
  __
  +String getName()
  +boolean equals(Object)
  +String toString()
  +int hashCode()
}
abstract class "Place" as ru.jlexender.se.labstory.basicClasses.Place {
  -String name
  -Weather weather
  __
  +String getName()
  +String getWeather()
  +boolean equals(Object)
  +String toString()
  +int hashCode()
}
class "Time" as ru.jlexender.se.labstory.basicClasses.Time {
  -int months
  -int years
  __
  +int getMonths()
  +int getYears()
  +boolean equals(Object)
  +String toString()
  +int hashCode()
}
class "Buns" as ru.jlexender.se.labstory.classesList.Item.Buns {
  -String name
}
class "Glass" as ru.jlexender.se.labstory.classesList.Item.Glass {
  -String name
}
class "Juice" as ru.jlexender.se.labstory.classesList.Item.Juice {
}
class "BabyHome" as ru.jlexender.se.labstory.classesList.Place.BabyHome {
}
class "FilleHome" as ru.jlexender.se.labstory.classesList.Place.FilleHome {
}
class "Porch" as ru.jlexender.se.labstory.classesList.Place.Porch {
}
class "RulleHome" as ru.jlexender.se.labstory.classesList.Place.RulleHome {
}
enum "Color" as ru.jlexender.se.labstory.enums.Color {
  NONE
  RED
  BLUE
  LIGHTBLUE
  GREEN
  YELLOW
  ORANGE
  PINK
  WHITE
  BLACK
  ..
  -String value
  __
  + {static}Color[] values()
  + {static}Color valueOf(String)
  +String getValue()
}
enum "Mood" as ru.jlexender.se.labstory.enums.Mood {
  NORMAL
  HAPPY
  ANGRY
  SAD
  WORRIED
  ..
  -String value
  __
  + {static}Mood[] values()
  + {static}Mood valueOf(String)
  +String getValue()
}
enum "Weather" as ru.jlexender.se.labstory.enums.Weather {
  CLOUDY
  SUNNY
  SNOWY
  RAINY
  THUNDER
  ..
  -String value
  __
  + {static}Weather[] values()
  + {static}Weather valueOf(String)
  +String getValue()
}
interface "IDrinkingItem" as ru.jlexender.se.labstory.interfaces.IDrinkingItem {
}
interface "IFood" as ru.jlexender.se.labstory.interfaces.IFood {
}
interface "IRollable" as ru.jlexender.se.labstory.interfaces.IRollable {
}
interface "ISeat" as ru.jlexender.se.labstory.interfaces.ISeat {
}
class "Printer" as ru.jlexender.se.labstory.utilityClasses.Printer {
  + {static}void print(String)
}
ru.jlexender.se.labstory.Book --> ru.jlexender.se.labstory.classesList.Place.Porch
ru.jlexender.se.labstory.Book --> ru.jlexender.se.labstory.basicClasses.Human
ru.jlexender.se.labstory.Book --> ru.jlexender.se.labstory.basicClasses.Place
ru.jlexender.se.labstory.Book --> ru.jlexender.se.labstory.classesList.Item.Buns
ru.jlexender.se.labstory.Book --> ru.jlexender.se.labstory.classesList.Item.Juice
ru.jlexender.se.labstory.Book --> ru.jlexender.se.labstory.classesList.Item.Glass
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IDoNotListen
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IDrinkFromItem
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IEat
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IForgetToTell
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IGoingTo
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IHold
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.ILive
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IPour
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IRollItem
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.ISit
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IStartThinking
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.IStopThinking
ru.jlexender.se.labstory.basicClasses.Human .u.|> ru.jlexender.se.labstory.actionInterfaces.ITell
ru.jlexender.se.labstory.basicClasses.Human --> ru.jlexender.se.labstory.enums.Mood
ru.jlexender.se.labstory.basicClasses.Place --> ru.jlexender.se.labstory.enums.Weather
ru.jlexender.se.labstory.classesList.Item.Buns -u-|> ru.jlexender.se.labstory.basicClasses.Item
ru.jlexender.se.labstory.classesList.Item.Buns .u.|> ru.jlexender.se.labstory.interfaces.IFood
ru.jlexender.se.labstory.classesList.Item.Buns .u.|> ru.jlexender.se.labstory.interfaces.IRollable
ru.jlexender.se.labstory.classesList.Item.Glass -u-|> ru.jlexender.se.labstory.basicClasses.Item
ru.jlexender.se.labstory.classesList.Item.Glass .u.|> ru.jlexender.se.labstory.interfaces.IRollable
ru.jlexender.se.labstory.classesList.Item.Glass .u.|> ru.jlexender.se.labstory.interfaces.IDrinkingItem
ru.jlexender.se.labstory.classesList.Item.Juice -u-|> ru.jlexender.se.labstory.basicClasses.Item
ru.jlexender.se.labstory.classesList.Place.BabyHome -u-|> ru.jlexender.se.labstory.basicClasses.Place
ru.jlexender.se.labstory.classesList.Place.FilleHome -u-|> ru.jlexender.se.labstory.basicClasses.Place
ru.jlexender.se.labstory.classesList.Place.Porch -u-|> ru.jlexender.se.labstory.basicClasses.Place
ru.jlexender.se.labstory.classesList.Place.Porch .u.|> ru.jlexender.se.labstory.interfaces.ISeat
ru.jlexender.se.labstory.classesList.Place.RulleHome -u-|> ru.jlexender.se.labstory.basicClasses.Place
ru.jlexender.se.labstory.enums.Color -u-|> java.lang.Enum
ru.jlexender.se.labstory.enums.Mood -u-|> java.lang.Enum
ru.jlexender.se.labstory.enums.Weather -u-|> java.lang.Enum
@enduml
